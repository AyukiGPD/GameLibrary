//=============================================================================
//!
//!	@file	Light.cpp
//!	@brief	ライトクラス
//!
//!	@author	YKCH
//!
//=============================================================================
#include "stdafx.h"

//=============================================================================
//!	ライトオブジェクト
//=============================================================================
//-----------------------------------------------------------------------------
//!	コンストラクタ
//-----------------------------------------------------------------------------
LightObject::LightObject()
: _color(0)
, _power(0.f)
, _lightMode(LIGHT_MODE::INVALID)
{
	Manager::Light()->Add(this);
	AddTag("Light");
}

//-----------------------------------------------------------------------------
//!	コンストラクタ
//-----------------------------------------------------------------------------
LightObject::LightObject(const Desc& desc)
: GameObjectBase(desc._position,Quaternion::IDENTITY,Vector3::ONE)
, _color	(desc._color)
, _power	(desc._power)
, _lightMode(desc._lightMode)
{
	Manager::Light()->Add(this);
	AddTag("Light");
}


//-----------------------------------------------------------------------------
//!	デストラクタ
//-----------------------------------------------------------------------------
LightObject::~LightObject()
{
	Manager::Light()->Release(this);
}

void LightObject::SetLight(const Desc& desc)
{
	SetWorldPosition(desc._position);
//	_position	= desc._position;
	_color		= desc._color;
	_lightMode	= desc._lightMode;
	_power		= desc._power;
}

//-----------------------------------------------------------------------------
//!	設定
//!	@param	[in]	position	座標,ベクトル
//!	@param	[in]	color		色
//!	@param	[in]	mode		モード
//-----------------------------------------------------------------------------
void LightObject::SetLight(const Vector3& position, const Color& color, LIGHT_MODE mode, f32 power)
{
	SetWorldPosition(position);
//	_position	= position;
	_color		= color;
	_lightMode	= mode;
	_power		= power;
}
//-----------------------------------------------------------------------------
//!	座標設定
//!	@param	[in]	position	座標,ベクトル
//-----------------------------------------------------------------------------
//void Light::SetPosition(const Vector3& position)
//{
//	_position = position;
//}
//-----------------------------------------------------------------------------
//!	色設定
//!	@param	[in]	color	色
//-----------------------------------------------------------------------------
void LightObject::SetColor(const Color& color)
{
	_color = color;
}
//-----------------------------------------------------------------------------
//!	ライトモード設定
//!	@param	[in]	mode	モード
//-----------------------------------------------------------------------------
void LightObject::SetMode(LIGHT_MODE mode)
{
	_lightMode = mode;
}
//-----------------------------------------------------------------------------
//!	ライトの強さ設定
//!	@param	[in]	power	強さ
//-----------------------------------------------------------------------------
void LightObject::SetPower(f32 power)
{
	_power = power;
}

//=============================================================================
//	LightManager
//=============================================================================
//-----------------------------------------------------------------------------
//!	コンストラクタ
//-----------------------------------------------------------------------------
LightManager::LightManager()
{
}
//-----------------------------------------------------------------------------
//!	デストラクタ
//-----------------------------------------------------------------------------
LightManager::~LightManager()
{
}

//-----------------------------------------------------------------------------
//!	解放
//!	@param	[in,out]	pLight	解放するカメラのポインタ
//-----------------------------------------------------------------------------
void LightManager::Add(LightObject* pLight)
{
	if(pLight)
	{
		_pLightList.push_back(pLight);
	}
}

//-----------------------------------------------------------------------------
//!	解放
//!	@param	[in,out]	pLight	解放するカメラのポインタ
//-----------------------------------------------------------------------------
void LightManager::Release(LightObject* pLight)
{
	if(pLight)
	{
		auto itr = _pLightList.begin();
		while(itr != _pLightList.end())
		{
			if(pLight == (*itr))
			{
				break;
			}
			++itr;
		}
		//s32 refCount = pLight->Release();
		//pLight = nullptr;
		//if(refCount == 0)
		//{
			_pLightList.erase(itr);
		//}
	}
}

//-----------------------------------------------------------------------------
//!	ライトリスト取得
//!	@return	ライトリスト
//-----------------------------------------------------------------------------
std::list<LightObject*>& LightManager::GetLightList()
{
	return _pLightList;
}
